services:
  otel-dotnet6-todo-app:
    build:
      context: ..
      dockerfile: tilt/Dockerfile
    volumes:
      - ..:/workspace:cached
      - ../scripts/db:/docker-entrypoint-initdb.d:ro
    command: dotnet watch run --project /workspace/src/Api/TodoApp.Api.csproj
    image: otel-dotnet6-todo-app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_CONNECTION=Host=localhost;Database=tododb;Username=postgres;Password=postgres
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
    depends_on:
      - db
      - jaeger

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../scripts/db:/docker-entrypoint-initdb.d:ro
    environment:
      - POSTGRES_DB=tododb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"

  e2e-test:
    image: curlimages/curl:latest
    volumes:
      - ../scripts/e2e:/e2e:ro
    depends_on:
      - otel-dotnet6-todo-app
    command: sh -c "until curl -s http://localhost:5001/health > /dev/null; do sleep 1; done && sh /e2e/run-tests.sh"

volumes:
  postgres-data:
  grafana-data:
